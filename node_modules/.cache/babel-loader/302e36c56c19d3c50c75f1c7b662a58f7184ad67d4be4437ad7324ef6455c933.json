{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMediaQuery } from 'react-responsive';\nexport function ScreenSize() {\n  _s();\n  const size = {\n    mobS: useMediaQuery({\n      query: '(max-width: 350px)'\n    }),\n    mobM: useMediaQuery({\n      query: '(min-width: 351px) and (max-width: 449px)'\n    }),\n    mobL: useMediaQuery({\n      query: '(min-width: 450px) and (max-width: 599px)'\n    }),\n    lapS: useMediaQuery({\n      query: '(min-width: 600px) and (max-width: 799px)'\n    }),\n    lapM: useMediaQuery({\n      query: '(min-width: 800px) and (max-width: 999px)'\n    }),\n    lapL: useMediaQuery({\n      query: '(min-width: 1000px) and (max-width: 1199px)'\n    }),\n    lapXL: useMediaQuery({\n      query: '(min-width: 1200px)'\n    })\n  };\n  return size;\n}\n_s(ScreenSize, \"gl3zR9AAGZjzfAOaxKqUUld+Tag=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n_c = ScreenSize;\nvar _c;\n$RefreshReg$(_c, \"ScreenSize\");","map":{"version":3,"names":["useMediaQuery","ScreenSize","_s","size","mobS","query","mobM","mobL","lapS","lapM","lapL","lapXL","_c","$RefreshReg$"],"sources":["/home/yaro/MyWeb/src/screen.js"],"sourcesContent":["import {useMediaQuery} from 'react-responsive'\n                 \n\nexport function ScreenSize(){\nconst size = {\n  mobS: useMediaQuery({ query: '(max-width: 350px)'}), \n  mobM: useMediaQuery({ query: '(min-width: 351px) and (max-width: 449px)'}),\n  mobL: useMediaQuery({ query: '(min-width: 450px) and (max-width: 599px)'}),\n  lapS: useMediaQuery({ query: '(min-width: 600px) and (max-width: 799px)'}),\n  lapM: useMediaQuery({ query: '(min-width: 800px) and (max-width: 999px)'}),\n  lapL: useMediaQuery({ query: '(min-width: 1000px) and (max-width: 1199px)'}),\n  lapXL: useMediaQuery({ query: '(min-width: 1200px)'})\n}\n\treturn size\n\t     \n\t}\n"],"mappings":";AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAG9C,OAAO,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAG;IACXC,IAAI,EAAEJ,aAAa,CAAC;MAAEK,KAAK,EAAE;IAAoB,CAAC,CAAC;IACnDC,IAAI,EAAEN,aAAa,CAAC;MAAEK,KAAK,EAAE;IAA2C,CAAC,CAAC;IAC1EE,IAAI,EAAEP,aAAa,CAAC;MAAEK,KAAK,EAAE;IAA2C,CAAC,CAAC;IAC1EG,IAAI,EAAER,aAAa,CAAC;MAAEK,KAAK,EAAE;IAA2C,CAAC,CAAC;IAC1EI,IAAI,EAAET,aAAa,CAAC;MAAEK,KAAK,EAAE;IAA2C,CAAC,CAAC;IAC1EK,IAAI,EAAEV,aAAa,CAAC;MAAEK,KAAK,EAAE;IAA6C,CAAC,CAAC;IAC5EM,KAAK,EAAEX,aAAa,CAAC;MAAEK,KAAK,EAAE;IAAqB,CAAC;EACtD,CAAC;EACA,OAAOF,IAAI;AAEX;AAACD,EAAA,CAZcD,UAAU;EAAA,QAElBD,aAAa,EACbA,aAAa,EACbA,aAAa,EACbA,aAAa,EACbA,aAAa,EACbA,aAAa,EACZA,aAAa;AAAA;AAAAY,EAAA,GARNX,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}